


import React, { useState } from 'react';
import { useReactMediaRecorder } from 'react-media-recorder';



// Function to convert audio blob to base64 encoded string
const audioBlobToBase64 = (blob) => {
    return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onloadend = () => {
            const arrayBuffer = reader.result;
            const base64Audio = btoa(
                new Uint8Array(arrayBuffer).reduce(
                    (data, byte) => data + String.fromCharCode(byte),
                    ''
                )
            );
            resolve(base64Audio);
        };
        reader.onerror = reject;
        reader.readAsArrayBuffer(blob);
    });
};

const MyRecorder = () => {
    const [recordingData, setRecordingData] = useState('');
    const {
        startRecording,
        stopRecording,
        mediaBlobUrl
    } = useReactMediaRecorder({
        audio: true,
        onStop: (blobUrl, blob) => {
            // You can send the blob or convert it here
            sendRecording(blob);
        }
    });

    const sendRecording = (data) => {
        // Implement your sending logic here
        console.log(data, "Audio data----");
        // Add the functionality to send data to the server or another process
    };

    return (
        <div>
            <button onClick={startRecording}>Start Recording</button>
            <button onClick={stopRecording}>Stop Recording</button>
            <audio src={mediaBlobUrl} controls />
        </div>
    );
};

export default MyRecorder;